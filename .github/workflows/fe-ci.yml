name: FRONTEND-CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - dev
      - main
    paths:
      - 'src/frontend/**'
  push:
    branches:
      - fe-refac/fe-ci

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    if: ${{ github.actor != 'l10nbot' }}
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Restore pnpm store cache
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('src/frontend/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Restore Web .turbo Cache
        uses: actions/cache@v4
        with:
          path: src/frontend/apps/web/.turbo
          key: ${{ runner.os }}-turbo-web-${{ hashFiles('src/frontend/apps/web/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-turbo-web-

      - name: Restore UI .turbo Cache
        uses: actions/cache@v4
        with:
          path: src/frontend/packages/ui/.turbo
          key: ${{ runner.os }}-turbo-ui-${{ hashFiles('src/frontend/packages/ui/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-turbo-ui-

      # 폴더가 없으면 생성해서 이후 단계에서 오류가 발생하지 않도록 함
      - name: Ensure UI .turbo directory exists
        run: mkdir -p src/frontend/packages/ui/.turbo

      - name: Install dependencies and run CI
        working-directory: src/frontend
        run: |
          # --offline 옵션을 사용하면 캐시된 패키지만 설치합니다.
          # 네트워크가 필요한 경우에는 이 옵션을 제거하세요.
          pnpm install --strict-peer-dependencies=false --no-frozen-lockfile
          # turbo가 이미 devDependencies에 있다면 이 명령은 불필요하므로 제거하거나 조건부 실행할 수 있음
          pnpm add turbo --save-dev -w
          pnpm turbo lint build --parallel

  required:
    needs: [changes]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Fail if any previous job failed
        if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'skipped') || contains(needs.*.result, 'cancelled')
        run: exit 1
